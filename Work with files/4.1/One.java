import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;

public class One {
    public static void main (String [] args) {
        File root = new File("."); // создаем экземпляр класса File с именем root для каталога "."
        ArrayList<File> expand = new ArrayList<File>(); // создаем  списочный массив объектов типа File
        expand.add(root); // добавляем в списочный массив root

        for(int depth = 0; depth < 10; depth++) { //запускаем цикл 10 раз, с значением 0 до 9 (включительно)
            File[] expandCopy = expand.toArray(new File[expand.size()]); // создаем массив размером равным количеству элементов списочного массива expand. В который копируем элементы из списочного массива
            expand.clear(); // очищаем списочный массив expand
            for (File file : expandCopy) { // запускаем расширенный цикл, где указываем (тип переменной имя переменной : массив), и для каждого элемента массива выполняем следующий код:
                System.out.println(depth + " " + file); // выводим в консоль номер обычного цикла от 0 до 9 и значение переменной file типа File
                if (file.isDirectory()) { // проверяем, является ли путь директорией и возвращем true
                    expand.addAll(Arrays.asList(file.listFiles())); // в списочный массив expand добавляем все значения списка, в который преобразовываем, возвращаемый массив файлов и подкаталогов, находящихся по значению переменной file
    /*
    "В двух словах"
    Создаем экземпляр File, в котором храним имя директории
    Создаем списочный массив expand, потому что не знаем точное количесто элементов находящихся в директории.
    Добавляем объект File в expand

    Создаем обычный цикл для обозначения глубины вложенности
    На каждой итерации цикла создаем массив expandCopy в который копируем значения из списочного массива expand
    Очищаем списочный массив expand
    Запускаем расширенный цикл, где проходимеся по всем значениям переменной типа File
    Выводим в консоль номер обычного цикла + значение переменной file (путь внутри подкатегории)
    Если данное значение является директорией, то в списочный массив expand добавляем все значения списка, 
    в который преобразовываем, возвращаемый массив файлов и подкаталогов, находящихся по значению переменной file.
    */                
                }
            }
        }
    }
}
